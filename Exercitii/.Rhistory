# See the structures of datas
str(gold)
library("forecast", lib.loc="~/R/win-library/3.5")
library("fpp2", lib.loc="~/R/win-library/3.5")
# See the structures of datas
str(gold)
str(woolyrnq)
str(gas)
# a. Use autoplot to plot each of these in separate plots.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
writeLines("")
# b. What is the frequency of each commodity series? Hint: apply the frequency() function.
print("Frequency")
print("gold")
frequency(gold)
print("woolyrnq")
frequency(woolyrnq)
print("gas")
frequency(gas)
writeLines("")
# c. Use which.max() to spot the outlier in the gold series. Which observation was it?
print("When gold got maximum value?")
which.max(gold)
print("What was the gold's maximum value?")
gold[which.max(gold)]
# See the structures of datas
str(gold)
str(woolyrnq)
str(gas)
# a. Use autoplot to plot each of these in separate plots.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
writeLines("")
# b. What is the frequency of each commodity series? Hint: apply the frequency() function.
print("Frequency")
print("gold")
frequency(gold)
print("woolyrnq")
frequency(woolyrnq)
print("gas")
frequency(gas)
writeLines("")
# c. Use which.max() to spot the outlier in the gold series. Which observation was it?
print("When gold got maximum value?")
which.max(gold)
print("What was the gold's maximum value?")
gold[which.max(gold)]
# a. You can read the data into R with the following script:
tute1 <- read.csv("tute1.csv", header=TRUE)
# a. You can read the data into R with the following script:
tute1 <- read.csv("tute1.csv", header=TRUE)
View(tute1)
# b. Convert the data to time series
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
# (The [,-1] removes the first column which contains the quarters as we don't need them now.)
# c. Construct time series plots of each of the three series
autoplot(mytimeseries, facets=TRUE)
# Check what happens when you don't include facets=TRUE.
autoplot(mytimeseries)
# c. Construct time series plots of each of the three series
# autoplot(mytimeseries, facets=TRUE)
# Check what happens when you don't include facets=TRUE.
autoplot(mytimeseries)
# b. Convert the data to time series
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
# (The [,-1] removes the first column which contains the quarters as we don't need them now.)
# b. Convert the data to time series
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
# (The [,-1] removes the first column which contains the quarters as we don't need them now.)
# c. Construct time series plots of each of the three series
# autoplot(mytimeseries, facets=TRUE)
# Check what happens when you don't include facets=TRUE.
autoplot(mytimeseries)
# c. Construct time series plots of each of the three series
autoplot(mytimeseries, facets=TRUE)
# Check what happens when you don't include facets=TRUE.
#autoplot(mytimeseries)
# a. You can read the data into R with the following script:
retaildata <- xlsx::read.xlsx("retail.xlsx", sheetIndex = 1, startRow = 2)
# a. You can read the data into R with the following script:
retaildata <- xlsx::read.xlsx("retail.xlsx", sheetIndex = 1, startRow = 2)
View(retaildata)
# retaildata <- readxl::read_excel("retail.xlsx", skip=1)
# You may need to first install the readxl package. The second argument (skip=1) is required because the Excel sheet has two header rows.
# b. Select one of the time series as follows (but replace the column name with your own chosen column):
myts <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
# retaildata <- readxl::read_excel("retail.xlsx", skip=1)
# You may need to first install the readxl package. The second argument (skip=1) is required because the Excel sheet has two header rows.
# b. Select one of the time series as follows (but replace the column name with your own chosen column):
myts <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
# retaildata <- readxl::read_excel("retail.xlsx", skip=1)
# You may need to first install the readxl package. The second argument (skip=1) is required because the Excel sheet has two header rows.
# b. Select one of the time series as follows (but replace the column name with your own chosen column):
myts <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
View(retaildata)
# b. Select one of the time series as follows (but replace the column name with your own chosen column):
View(retaildata)
myts <- ts(retaildata[,"A3349873A"], frequency=12, start=c(1982,4))
View(retaildata)
# c. Explore your chosen retail time series using the following functions: autoplot, ggseasonplot, ggsubseriesplot, gglagplot, ggAcf
#Can you spot any seasonality, cyclicity and trend? What do you learn about the series?
autoplot(myts)
ggseasonplot(myts)
ggsubseriesplot(myts)
gglagplot(myts, lags = 12)
ggAcf(myts)
# Seasonality and trend of the data can be seen
# - Use help() to find out about the data in each series.
help(bicoal)
help(chicken)
help(dole)
help(usdeaths)
help(lynx)
help(goog)
help(writing)
help(fancy)
help(a10)
help(h02)
# - For the goog plot, modify the axis labels and title.
autoplot(goog) +
ggtitle("Daily closing stock prices of Google Inc.") +
xlab("Time") +
ylab("Price(Unit: US$)")
# a. You can read the data into R with the following script:
retaildata <- readxl::read_excel("retail.xlsx", skip=1)
View(retaildata)
# The second argument (skip=1) is required because the Excel sheet has two header rows.
# c. Explore your chosen retail time series using the following functions: autoplot, ggseasonplot, ggsubseriesplot, gglagplot, ggAcf
#Can you spot any seasonality, cyclicity and trend? What do you learn about the series?
autoplot(myts)
ggseasonplot(myts)
ggsubseriesplot(myts)
gglagplot(myts, lags = 12)
ggAcf(myts)
# Seasonality and trend of the data can be seen
autoplot(bicoal)
autoplot(chicken)
autoplot(dole)
autoplot(usdeaths)
autoplot(lynx)
autoplot(goog)
autoplot(writing)
autoplot(fancy)
autoplot(a10)
autoplot(h02)
# - For the goog plot, modify the axis labels and title.
autoplot(goog) +
ggtitle("Daily closing stock prices of Google Inc.") +
xlab("Time") +
ylab("Price(Unit: US$)")
# - What can you say about the seasonal patterns?
# - Can you identify any unusual years?
ggseasonplot(writing)
ggsubseriesplot(writing)
# The sales amount of paper falls down in August annually
ggseasonplot(fancy)
ggsubseriesplot(fancy)
# In December, 1992 the monthly sales for a souvenir shop increased dramatically compared to the same month of the last year
ggseasonplot(a10)
ggsubseriesplot(a10)
# The amount of antidiabetes monthly scripts falls down in February annually
ggseasonplot(h02)
ggsubseriesplot(h02)
# The amount of corticosteroid monthly scripts also falls down in February annually
autoplot(gasoline)
ggseasonplot(gasoline)
# ggsubseriesplot(gasoline)
# The number of weeks is 52 and it looked like it is too much for subseriesplot
gglagplot(gasoline)
ggAcf(gasoline, lag.max = 1000)
# can spot seasonality and trend
autoplot(gasoline)
ggseasonplot(gasoline)
ggsubseriesplot(gasoline)
# See the structure of arrivals
str(arrivals)
# - Use autoplot, ggseasonplot and ggsubseriesplot to compare the differences between the arrivals from these four countries.
# - Can you identify any unusual observations?
# See the structure of arrivals
str(arrivals)
# - Use autoplot, ggseasonplot and ggsubseriesplot to compare the differences between the arrivals from these four countries.
# - Can you identify any unusual observations?
# See the structure of arrivals
str(arrivals)
# - Use autoplot, ggseasonplot and ggsubseriesplot to compare the differences between the arrivals from these four countries.
# - Can you identify any unusual observations?
# See the structure of arrivals
str(arrivals)
# - Use autoplot, ggseasonplot and ggsubseriesplot to compare the differences between the arrivals from these four countries.
# - Can you identify any unusual observations?
autoplot(arrivals)
# The biggest number of arrivals came from New Zealand in 1980s. And the title owner country changed to Japan in 1990s and came back to UK in 2000s.
# The arrival data of UK shows the biggest quarterly fluctuation.
ggseasonplot(arrivals[, "Japan"])
ggseasonplot(arrivals[, "NZ"])
ggseasonplot(arrivals[, "UK"])
ggseasonplot(arrivals[, "US"])
ggsubseriesplot(arrivals[, "Japan"])
ggsubseriesplot(arrivals[, "NZ"])
ggsubseriesplot(arrivals[, "UK"])
ggsubseriesplot(arrivals[, "US"])
# The arrivals from Japan decrease a lot in 2nd quarter compared to the other quarteres.
# The arrivals from New Zealand are highest in 3rd quarter and lowest in 1st quarter.
# The arrivals from UK and US are low in 2nd and 3rd quarters and high in 1st and 4th quarters.
autoplot(arrivals)
ggseasonplot(arrivals[, "Japan"])
ggseasonplot(arrivals[, "NZ"])
ggseasonplot(arrivals[, "UK"])
ggseasonplot(arrivals[, "US"])
ggsubseriesplot(arrivals[, "Japan"])
ggsubseriesplot(arrivals[, "NZ"])
ggsubseriesplot(arrivals[, "UK"])
ggsubseriesplot(arrivals[, "US"])
# The arrivals from Japan decrease a lot in 2nd quarter compared to the other quarteres.
# The arrivals from New Zealand are highest in 3rd quarter and lowest in 1st quarter.
# The arrivals from UK and US are low in 2nd and 3rd quarters and high in 1st and 4th quarters.
mypigs <- window(pigs, start=1990)
str(mypigs)
autoplot(mypigs)
ggAcf(mypigs)
# can find that 3 autocorrelation values were outside of bounds. Therefore mypigs isn't probably white noise.
mypigs <- window(pigs, start=1990)
#str(mypigs)
autoplot(mypigs)
ggAcf(mypigs)
# We can see that the autocorrelation values were outside of bounds, so there isn't probably white noise present.
ddj <- diff(dj)
#str(ddj)
autoplot(ddj)
ggAcf(ddj)
# can find that substantially less than 5% of autocorrelation values were outside of bounds. Therefore ddj can be white noise.
ddj <- diff(dj)
#str(ddj)
autoplot(ddj)
ggAcf(ddj)
# Only a small part of the autocorrelation values were outside bounds, so there probably can be white noise.
